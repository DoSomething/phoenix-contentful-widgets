/* global window, document */

import 'json-editor';
import json from './schema.json';
// import JSONEditorcontentfulTheme from './json-editor-contentful-theme';

// set a contentful theme on the JSON Editor
// window.JSONEditor.defaults.themes.contentful = JSONEditorcontentfulTheme(window.JSONEditor);

// Helper Methods:
const createElement = (element = null, options = {}, parent = document.body) => {
  const newElement = document.createElement(element);

  Object.keys(options).forEach(prop => (
    newElement[prop] = options[prop]
  ));

  parent.appendChild(newElement);
  return newElement;
};

const debounce = (func, wait) => {
  let timeout;
  return function (...args) {
    const context = this;
    const later = () => {
      timeout = null;
      func.apply(context, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    if (! timeout) {
      func.apply(context, args);
    }
  };
};

// Reference to the extension API
const contentfulExtension = window.contentfulExtension;


/**
 * Custom JSON form editor widget for Contentful.
 * Displays a form generated by a JSON Schema. The form input will generate JSON.
 */
contentfulExtension.init((extension) => {
  extension.window.startAutoResizer();

  const editorElement = createElement('div', { className: 'jfe-editor-root' });

  const editor = new window.JSONEditor(editorElement, {
    // theme: 'contentful',
    schema: json,
    no_additional_properties: true,
    required_by_default: true,
    startval: extension.field.getValue(),
    disable_collapse: true,
    disable_properties: true,
    show_errors: 'always',
  });

  const validateAndSave = debounce(() => {
    const errors = editor.validate();

    if (errors.length === 0) {
      const currentJSON = editor.getValue();
      console.log(currentJSON);
      extension.field.setValue(currentJSON);
    }
  }, 150);

  const inputChanged = () => {
    extension.window.updateHeight();
    validateAndSave();
  };

  editor.on('change', inputChanged);
});
